#!/bin/sh
nv=/usr/sbin/nvram
ipt=/usr/sbin/iptables
tunnels=`$nv get oet_tunnels`
for i in `seq 1 $tunnels`
do
	if test -e "/tmp/oet/pid/${i}.pid"
	then 
		$ipt -D FORWARD -i oet${i} -j ACCEPT 2>&1 > /dev/null
		$ipt -D FORWARD -o oet${i} -j ACCEPT 2>&1 > /dev/null
		$ipt -D INPUT -i oet${i} -j ACCEPT 2>&1 > /dev/null
		$ipt -D INPUT -p 47 -s `$nv get oet${i}_rem` -j ACCEPT 2>&1 > /dev/null
		$ipt -D INPUT -p 97 -s `$nv get oet${i}_rem` -j ACCEPT 2>&1 > /dev/null
		$ipt -D INPUT -p udp --dport `$nv get oet${i}_port` -j ACCEPT 2>&1 > /dev/null
		$ipt -t raw -D PREROUTING ! -i oet${i} -d $($nv get oet${i}_ipaddr)/$(getmask $($nv get oet${i}_netmask)) -m addrtype ! --src-type LOCAL -j DROP
		$ipt -t nat -D POSTROUTING -o oet${i} -j MASQUERADE 2>&1 > /dev/null
	fi
	if [ `$nv get oet${i}_en` -eq 1 ]
	then
		if [ `$nv get oet${i}_proto` -eq 1 ]
		then
			$ipt -I INPUT -p 47 -s `$nv get oet${i}_rem` -j ACCEPT 2>&1 > /dev/null
		fi
		if [ `$nv get oet${i}_proto` -eq 0 ]
		then
			$ipt -I INPUT -p 97 -s `$nv get oet${i}_rem` -j ACCEPT 2>&1 > /dev/null
		fi
		if [ `$nv get oet${i}_bridged` -ne 1 ]
		then
			$ipt -I FORWARD -i oet${i} -j ACCEPT 2>&1 > /dev/null
			$ipt -I FORWARD -o oet${i} -j ACCEPT 2>&1 > /dev/null
			$ipt -I INPUT -i oet${i} -j ACCEPT 2>&1 > /dev/null
		fi
		if [ `$nv get oet${i}_proto` -eq 2 ]
		then
			insmod xt_addrtype
			$ipt -I INPUT -p udp --dport `$nv get oet${i}_port` -j ACCEPT 2>&1 > /dev/null
			if [ `$nv get oet${i}_mit` -eq 1 ]
			then
				$ipt -t raw -I PREROUTING ! -i oet${i} -d $($nv get oet${i}_ipaddr)/$(getmask $($nv get oet${i}_netmask)) -m addrtype ! --src-type LOCAL -j DROP
			fi
			#egc: add NAT out for DDWRT client
			# Controlled by nvram parameter oet${i}_natout
			if [[ $($nv get oet${i}_natout) -eq 1 ]]
			then
				$ipt -t nat -I POSTROUTING -o oet${i} -j SNAT --to-source $($nv get oet${i}_ipaddr) 2>&1 > /dev/null
			fi
			
		fi
	fi
done
